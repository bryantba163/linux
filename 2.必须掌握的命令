1.Shell
  shell 是linux下一个命令行工具，充当人与硬件的交互，使用命令告诉终端，然后终端去调用对应的程序服务来完成用户的要求，目前主流的终端是Bash解释器。
2.man 帮助
  linux常见的命令格式：
    命令名称 [命令参数] [命令的对象]
  命令对象一般为：要处理的文件，目录，用户等资源，命令参数有长参数和短参数，长参数前加-- 短参数前加 - 
  man 命令可以查看某命令的帮助信息
  man man 来查看man命令的帮助信息
  man命令的帮助信息的结构：
  NAME 命令的名称
  SYNOPSIS 参数的大致用法
  DESCRIPTION 介绍说明
  EXAMPLE 举例
  OVERVIEW 概述
  DEFAULTS 默认的功能
  OPTIONS 具体的可用选项（带介绍）
  ENVIRONMENT 环境变量
  FILES 用到的文件
  SEE ALSO 相关的资料
  HISTORY 维护历史
3.常用命令
  1.echo
    echo命令用于在bash中输出字符串或者变量提取后的值，格式为"echo [字符串 | $变量]"
    例：把指定的字符串'centos'输出到bash
    echo centos
    例：提取变量的值
    echo $SHELL
    输出：/bin/bash

   2.date
     date 用于显示和设置系统时间或日期，格式为'date [选项][+指定时间格式]'
     date 后以'+'开头的参数
     date命令的参数
     %t 跳格(Tab键)  %H 小时(00-24) %I 小时(00-12) %M 分钟(00-59) %S 秒(00-59) %j 今年中的第几天
     例：按照"年-月-日 小时:分:秒"的格式查看当前系统时间
     date "+%Y-%m-%d %H:%M:%S"
     例：将当前系统时间设置为2020年3月12日14点01分
     date -s "20200312 14:01:00"
     date 命令中的参数%j 可用来查看今天是当年中的第几天。这个参数能够很好地区分
备份时间的新旧，即数字越大，越靠近当前时间
     例：date "+%j"

   3.reboot
     reboot 用于重启操作系统，默认只能root执行

   4.poweroff 
     poweroff 用于关闭系统，默认只能root

   5.wget
     wget 用于在bash中下载网络文件，wget [参数] 下载地址
     wget的参数
     -b 后台下载模式 -P(大写)下载到指定目录 -t 最大尝试次数 -c 断点续传 -p 下载网络页面内所有资源，包括图片，视频等 -r 递归下载

   6.ps
     ps 用于查看系统中进程的状态 格式为：ps [参数]
     ps -a 显示系统下所有进程 -u 进程的用户及其他信息 -x 显示没有控制终端的进程

     进程的5种常见状态 
     R (运行) 表示进程正在运行或在运行队列中等待运行 
     S (中断) 表示进程处于休眠状态，当某个条件形成或者接收到某个信号时，进程脱离此状态
     D (不可中断) 表示进程不在响应系统的异步信号，kill 不掉
     Z (僵死) 表示进程已经终止，但是进程的描述符依然存在，直到父进程调用wait4()系统函数将进程释放
     T (停止) 表示进程收到停止信号后停止运行

     ps aux 后会显示出来的进程的信息：
     USER：进程的所有者 如：root
     PID : 进程的ID 
     %CPU : 进程的CPU占用率
     %MEM ：进程的内存占用率
     VSZ：虚拟内存使用量，单位为 KB
     RSS：进程占用固定内存量，单位为 KB
     TTY : 进程所在的终端
     STAT ： 进程的状态 
     START ： 进程被启动的时间
     TIME ： 进程实际使用CPU的时间
     COMMAND ： 命令名称和参数
     ps aux 之所以没有- 是因为短格式参数可以合并仅保留一个- 但是ps命令可以允许参数不加 - 

   7.top
     top 用于动态的监控进程活动和系统负载
     可以看作Linux中的任务管理器
     top命令下输出的信息
     第 1 行：系统时间、运行时间、登录终端数、系统负载（三个数值分别为 1 分钟、5分钟、15 分钟内的平均值，数值越小意味着负载越低）
     第 2 行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。
     第 3 行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。
     第 4 行：物理内存总量、内存使用量、内存空闲量、作为内核缓存的内存量。
     第 5 行：虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、已被提前加载的内存量

   8.pidof
     pidof 用于查询某个指定服务进程的PID值，格式：pidof [参数] [服务名称]
     每个进程的PID是唯一的，所有使用PID来区分不同的进程

   9.kill
     kill 用于终止某个指定PID的进程 格式：kill [参数] [PID]
     killall 用来终止某项服务的全部进程，例如：sshd 服务，有多个进程，killall shhd后会终止sshd服务下所有的进程

     引申：在命令后加& 将命令进入系统后台运行

   10.ifconfig
      ifconfig 用于获取网卡的配置和网络状态，格式为：ifconfig [网络设备] [参数]
      ifconfig 可以查看到本机当前的网卡名称，inet参数后的IP地址，ether参数后的MAC地址以及RX 接受包，TX 发送的数据包 的个数，累计流量

   11.uname
      uname 用于查看系统内核和系统版本信息，格式：uname [-a]
      uname -a 显示的内容以此为：内核名称，主机名，内核发行版本，节点名，系统时间，硬件名称，硬件平台，处理器类型，操作系统名称等信息
      Linux balin 4.18.0-147.5.1.el8_1.x86_64 #1 SMP Wed Feb 5 02:00:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
      如果要查看当前系统版本的详细信息需要查看/etc/redhat-release文件

   12.uptime
      uptime 用于查看系统的负载信息
      uptime 输出内容依次为：当前系统时间，系统已运行时间，终端的启用数量，平均负载。
      平均负载的输出值为：1min 5min 15min

   13.free
      free 查看当前系统中内存的使用量，格式：free -h

   14.who
      who 用于查看当前登入主机的用户的终端信息，格式为：who [参数]

   15.last
      last 用于查看系统的所有登陆记录，格式为：last [参数]

   16.history
      history 用于查看执行过的历史命令
      加参数 -c 清除 可以修改/etc/profile 中HISTSIZE的变量值来定义history输出历史命令的条数 历史命令保存在~/.bsah_history 文件中
   17.sosreport
      sosreport 用于收集系统配置和架构信息并输出诊断文档
   18.pwd
      pwd 用于显示用户当前所处工作目录
   19.cd
      cd 用于切换工作路径，cd [目录名称]
      cd - 返回上次所处目录 cd .. 切换到上一级目录  cd ~ 切换到当前用户的家目录
   20.ls
      ls 用于显示目录中的文件信息，ls -a 查看隐藏文件，ls -l 查看大小，文件属性等详细信息，-d选项查看目录的权限和属性
   21.cat
      cat 用于查看文本内容，注意cat适合查看内容较少的纯文本文件，cat -n 加上行号
   22.more 
      more 用于查看内容较多的纯文本文件
   23.head
      head 用于查看文本文件的前N行，head -n 20 filename 查看filename的前20行
   24.tail
      tail 查看纯文本文件的后N行，或持续刷新内容，tail -n 20 filename 查看filename的后20行，tail -f /var/log/message 查看最新的日志文件
   25.tr
      tr 用于替换文本文件的字符，ex：cat filename | tr [a-z] [A-Z] 把filename里的小写字母替换为大写字母
   26.wc
      wc 用于统计指定文本的行数，字数，字节数，wc -l 只显示行数，wc -w 只显示单词数，wc -c 只显示字节数
   27.stat
      stat 查看文件的具体储存信息，储存时间等，有Access ，Modify ， Change三个加粗时间，具体三个时间的区别，查看touch命令。
   28.cut
      cut 用于按照'列' 提取文本字符，一般linux的输出以'行'输出，cut -f 参数来设置需要看的列数，-d 参数来设置间隔符号。
      例如：/etc/passwd
      passwd文件保存用户数据信息，用户信息的每一项用 ： 冒号间隔
      root:x:0:0:root:/root:/bin/bash 
      bin:x:1:1:bin:/bin:/sbin/nologin
      用cut命令提取用户名信息 cut -d: -f1 /etc/passwd
      输出为：
      root 
      bin 
      daemon 
      adm 
      lp
      ...
   29.diff
      diff 用来比较多个文本文件的差异， diff [参数] 文件 文件
      diff --brief filename filename2 让系统显示俩个文件比较后的结果
      diff -c 来描述文件内容的具体不同
   30.touch
      touch 用于创建空白文件或设置文件的时间
      touch -a filename 修改文件的读取时间 touch -m 修改文件的修改时间 touch -d 同时修改atime和mtime
   31.mkdir
      mkdir 用于创建文件目录 mkdir -p 递归创建具有嵌套关系的多个文件目录
      例：mkdir -p a/b/c/d 
          cd a cd b cd c cd d 
          pwd 输出为 /a/b/c/d
   32.cp
      cp用于复制文件或目录  cp [参数] 源文件 目标文件
      Linux中复制命令的三种情况
      如果目标文件是目录，则把源文件复制到目标文件目录中
      如果目标文件也是普通文件，则系统会询问是否把源文件覆盖目标文件
      如果目标文件不存在，则执行正常的复制命令
      cp -p 保留源文件的属性 cp -d 如果源文件为'链接文件'，则保留'链接文件'的属性 cp -r 递归复制，用于复制目录 cp -i 如果目标文件存在，询问是否覆盖 cp -a 相当于 cp -pdr
   33.mv
      mv 用于剪切文件或将文件重命名，mv [选项] 源文件 [目标路径|目标文件名]
      剪切命令不同与复制命令，剪切命令会默认删除源文件，只保留剪切后文件。如果在同一目录中对一个文件进行剪切，其实就是对这个文件重命名。
   34.rm
      rm 用来删除文件或者目录，rm [选项] 文件
      在Linux中删除文件，系统会默认询问是否要执行删除操作，rm -f 可以强制删除，系统不问。删除目录时，rm -r 实现递归删除
   35.dd
      dd 用于按照指定大小和个数的数据快来复制或转换文件，dd [参数]
      dd命令，可以让用户按照指定大小和个数的数据块来复制文件内容，还可以在复制过程中转换文件中的内容
      dd的主要参数：dd if 输入的文件名称，dd of 输出的文件名称，dd bs 设置每个'块'的大小，dd count 设置要复制'块'的个数
      例：在 /dev/zero 这个设备文件中，取出一块大小为560MB的数据块，然后保存成560_file的文件
      dd if=/dev/zero of=560_file count=1 bs=560M
      dd命令的功能不指复制文件，如果要把光驱设备中的光盘制作成iso镜像，可以用dd实现：dd if=/dev/cdrom of=镜像.iso 即可
      bs块大小和count块个数的关系：假设小明的饭量（即需求）是一个固定的值，用来盛饭的勺子的大小即 bs 块大小，而用勺子盛饭的次数即 count块个数。小明要想吃饱（满足需求），则需要在勺子大小（bs块大小）与用勺子盛饭的次数（count 块个数）之间进行平衡。勺子越大，用勺子盛饭的次数就越少。有上可见，bs 与 count 都是用来指定容量的大小，只要能满足需求，可随意组合搭配方式。
   36.file
      file 用于查看文件的类型，直接file filename即可
      在Linux中，设备，文本，目录都属于文件
   37.tar
      tar 用于对文件进行打包压缩或者解压文件，tar [选项] [文件]
      Linux中.tar .tar.gz .tar.bz2 格式文件都可以用tar
      tar的参数 -c 创建压缩文件 -x 解开压缩文件 -t 查看压缩包内有哪些文件 -z 用Gzip压缩或解压 -j 用bzip2来压缩或解压 -v 显示压缩或解压过程 -f 目标文件名 -p 保留原始权限和属性 -P 使用绝对路径来压缩 -C 解压到指定文件目录
      -c和-x 不能同时使用，-z 指定使用Gzip格式解压或压缩，-j指定使用bzip2格式来解压或压缩，具体根据文件后缀来决定用哪个。-f 一定要放到参数的最后一位，代表要解压或压缩的软件包名称
      tar -czvf 压缩包名称.tar.gz 要打包的目录 来把指定的文件打包 对应的解压命令为：tar -xzvf 压缩包名称.tar.gz
   38.grep
      grep 用于在文本中执行关键词搜索，并显示匹配的结果
      grep -b 将可执行文件当作文本文件来搜索 grep -c 仅显示找到的行数 grep -i 忽略大小写 grep -n 显示行号 grep -v 方向选择，仅列出没有'关键词'的行，grep的最常用参数就是-n 用来显示搜索到的信息的行号，-v 用于反选信息，即没有包含关键词的所有信息行。
      在Linux中，/etc/passwd 文件用来保存所有的用户信息，一旦某用户的登录终端被设置成/sbin/nologin ，则不再允许登陆系统，可以用grep 命令来查找当前系统中不允许登录系统的所有用户信息： grep /sbin/nologin /etc/pqsswd 
   39.find
      find 用于按照指定的条件来查找文件，find [查找路径] 寻找条件 操作
      Linux中一切都是文件 find 的参数：-name 匹配名称查找，-perm 匹配权限(mode为完全匹配，-mode为包含即可)，-user 匹配所有者，-group 匹配所有者组，-mtime -n +n 匹配修改内容的时间(-n 指n天以内，+n 指n天以前)，-atime -n +n 匹配访问文件的时间(-n指n天以内，+n指n天以前)，-ctime -n +n 匹配修改文件权限的时间(-n 指n天以内，+n指n天以前)，-nouser 匹配无所有者文件，-nogroup 匹配无所有组的文件，-newer f1 ！f2 匹配比文件f1新但比文件f2旧的文件，--type b/d/c/p/l/f 匹配文件类型(加的字母参数分别对应了块设备b，目录d，字符设备c，管道p，链接文件l，文本文件f)，-size 匹配了文件大小(+50KB代表查找超过50KB的文件，-50KB为查找小于50KB的文件)，-prune 忽略某个目录
      重点说 -exec 这个参数，这个参数用于把find命令搜索到的结果交由紧随其后的命令做进一步的处理，类似于管道符技术，并且由于find命令对参数的特殊要求，因此虽然exec为长参数，但是依然只需要一个(-)。
      find 实例：
      在/etc中找出所有以host开头的文件列表：find /etc -name "host*" -print
      在整个文件系统中搜索权限包括SUID权限的所有文件：find / -perm -4000 -print
      在整个文件系统中找出所有归属于balin用户的文件，并且复制到/root/findresults目录中：find / -user balin -exec cp -a {} /root/findresults/ \;  这个例子主要为了演示"-exec {}   \;"这个参数的用法，其中的{}代表了find命令收索出的每一个文件，并且命令结尾必须以 \; 结尾。 